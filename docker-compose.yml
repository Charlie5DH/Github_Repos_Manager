services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - github_repo_manager

  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    env_file:
      - .env
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - data:/var/lib/mysql
    networks:
      - github_repo_manager

  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - mariadb
      - rabbitmq
    networks:
      - github_repo_manager

  worker:
    build:
      context: ./backend
    container_name: worker
    restart: always
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    command: ["python", "-m", "app.services.worker"]
    depends_on:
      - mariadb
      - rabbitmq
      - backend
    networks:
      - github_repo_manager

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - github_repo_manager

volumes:
  data:

networks:
  github_repo_manager:
    driver: bridge
